-- MySQL Script generated by MySQL Workbench
-- 03/07/16 16:02:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema titfortat
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema titfortat
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `titfortat` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `titfortat` ;

-- -----------------------------------------------------
-- Table `titfortat`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`users` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`users` (
  `userId` BIGINT(16) NOT NULL AUTO_INCREMENT,
  `userName` VARCHAR(8) NOT NULL,
  `userEmail` VARCHAR(45) NOT NULL,
  `userPhone` VARCHAR(20) NULL,
  `userCountry` VARCHAR(45) NULL,
  `userPassword` BINARY(60) NOT NULL,
  `userCredits` INT UNSIGNED NULL DEFAULT 0,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`userId`),
  UNIQUE INDEX `userName_UNIQUE` (`userName` ASC),
  UNIQUE INDEX `userEmail_UNIQUE` (`userEmail` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `titfortat`.`groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`groups` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`groups` (
  `groupId` BIGINT(16) NOT NULL AUTO_INCREMENT,
  `groupName` VARCHAR(45) NOT NULL,
  `groupAdminId` BIGINT(16) NOT NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`groupId`),
  INDEX `fk_groups_users_idx` (`groupAdminId` ASC),
  CONSTRAINT `fk_groups_users`
    FOREIGN KEY (`groupAdminId`)
    REFERENCES `titfortat`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `titfortat`.`userGroups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`userGroups` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`userGroups` (
  `userId` BIGINT(16) NOT NULL,
  `groupId` BIGINT(16) NOT NULL,
  PRIMARY KEY (`userId`, `groupId`),
  INDEX `fk_users_has_groups_groups1_idx` (`groupId` ASC),
  INDEX `fk_users_has_groups_users1_idx` (`userId` ASC),
  CONSTRAINT `fk_users_has_groups_users1`
    FOREIGN KEY (`userId`)
    REFERENCES `titfortat`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_groups_groups1`
    FOREIGN KEY (`groupId`)
    REFERENCES `titfortat`.`groups` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `titfortat`.`statuses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`statuses` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`statuses` (
  `status` VARCHAR(20) NOT NULL,
  `statusDescription` VARCHAR(45) NULL,
  PRIMARY KEY (`status`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `titfortat`.`tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`tasks` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`tasks` (
  `taskId` BIGINT(16) NOT NULL AUTO_INCREMENT,
  `taskName` VARCHAR(45) NULL,
  `taskCredits` INT NULL,
  `taskStatus` VARCHAR(20) NOT NULL,
  `taskmasterId` BIGINT(16) NOT NULL,
  `assigneeId` BIGINT(16) NULL,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`taskId`),
  INDEX `fk_tasks_statuses1_idx` (`taskStatus` ASC),
  INDEX `fk_tasks_users1_idx` (`taskmasterId` ASC),
  INDEX `fk_tasks_users2_idx` (`assigneeId` ASC),
  CONSTRAINT `fk_tasks_statuses1`
    FOREIGN KEY (`taskStatus`)
    REFERENCES `titfortat`.`statuses` (`status`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_users1`
    FOREIGN KEY (`taskmasterId`)
    REFERENCES `titfortat`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_users2`
    FOREIGN KEY (`assigneeId`)
    REFERENCES `titfortat`.`users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `titfortat`.`invites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `titfortat`.`invites` ;

CREATE TABLE IF NOT EXISTS `titfortat`.`invites` (
  `groupId` BIGINT(16) NOT NULL,
  `inviteeEmail` VARCHAR(45) NOT NULL,
  `status` VARCHAR(20) NULL,
  PRIMARY KEY (`groupId`),
  CONSTRAINT `fk_invites_groups1`
    FOREIGN KEY (`groupId`)
    REFERENCES `titfortat`.`groups` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `titfortat`.`statuses`
-- -----------------------------------------------------
START TRANSACTION;
USE `titfortat`;
INSERT INTO `titfortat`.`statuses` (`status`, `statusDescription`) VALUES ('Pending', 'Initial task status. ');
INSERT INTO `titfortat`.`statuses` (`status`, `statusDescription`) VALUES ('Accepted', 'The assignee agreed to do the task');
INSERT INTO `titfortat`.`statuses` (`status`, `statusDescription`) VALUES ('In progress', 'The assignee is currently working on the task.');
INSERT INTO `titfortat`.`statuses` (`status`, `statusDescription`) VALUES ('Completed', 'The task is complete and awaiting validation by the task master.');
INSERT INTO `titfortat`.`statuses` (`status`, `statusDescription`) VALUES ('Closed', 'The task is complete and the taskmaster validated its execution.');

COMMIT;

